name: Build, Test and Release

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set PSModulePath
      shell: pwsh
      run: |
        $PSModulePath = @(
          [System.IO.Path]::Combine($Env:GITHUB_WORKSPACE, 'TMP', 'Modules'),
          $Env:PSModulePath
        ) -join  [System.IO.Path]::PathSeparator
        "PSModulePath=$PSModulePath" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.14
      with:
        versionSpec: '5.x'

    - name: Determine Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.9.14

    - name: Setup assets cache
      id: assetscache
      uses: actions/cache@v3
      with:
        path: |
          TMP/Modules
        key: ${{ hashFiles('Scripts/BuildDependencies.ps1') }}

    - name: Download required assemblies
      if: steps.assetscache.outputs.cache-hit != 'true'
      shell: pwsh
      run: ./Scripts/BuildDependencies.ps1

    - name: Build module
      shell: pwsh
      run: ./Scripts/Build.ps1 -PublishArtifact -Version "${{steps.gitversion.outputs.LegacySemVerPadded}}"
    
    - name: Publish release artifact
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v3
      with:
        name: StageCoder.zip
        path: StageCoder.zip

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:

    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: StageCoder.zip

    - name: Publish assets
      uses: softprops/action-gh-release@v1
      with:
        files: StageCoder.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Publish module to PSGallery
      shell: pwsh
      run: |
        Expand-Archive -Path 'StageCoder.zip'
        Publish-Module -Path "./StageCoder/StageCoder" -NuGetApiKey $Env:PSGALLERY_KEY -Verbose
      env:
        PSGALLERY_KEY: ${{ secrets.PSGALLERY_KEY }}

